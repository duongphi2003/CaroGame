def draw_text_centered(text, font, color, surface, rect):
    """
    Vẽ văn bản được căn giữa trong một hình chữ nhật trên một bề mặt nhất định.

    Args:
        text (str): Văn bản cần hiển thị.
        font (pygame.font.Font): Phông chữ được sử dụng để vẽ văn bản.
        color (tuple): Màu của văn bản.
        surface (pygame.Surface): Bề mặt trên đó văn bản được vẽ.
        rect (pygame.Rect): Hình chữ nhật xác định khu vực nơi văn bản sẽ được căn giữa.
    """
def draw_button(rect, text, font_size, color, surface, hover=False):
    """
    Vẽ một nút với văn bản, thay đổi màu và kích thước phông chữ nếu được di chuột qua.

    Args:
        rect (pygame.Rect): Hình chữ nhật xác định khu vực của nút.
        text (str): Văn bản hiển thị trên nút.
        font_size (int): Kích thước phông chữ cho văn bản của nút.
        color (tuple): Màu của nút.
        surface (pygame.Surface): Bề mặt trên đó nút được vẽ.
        hover (bool, optional): Cho biết nếu nút đang được di chuột qua. Mặc định là False.
    """
def load_background():
    """
    Tải ảnh nền.

    Returns:
        pygame.Surface: Ảnh nền đã tải.
    """
def load_background():
    """
    Tải ảnh nền.

    Returns:
        pygame.Surface: Ảnh nền đã tải.
    """
def load_icon():
    """
    Tải ảnh biểu tượng.

    Returns:
        pygame.Surface: Ảnh biểu tượng đã tải.
    """
def load_pieces():
    """
    Tải ảnh quân cờ và tách chúng thành ảnh X và O.

    Returns:
        tuple: Một bộ chứa ảnh X (pygame.Surface) và ảnh O (pygame.Surface).
    """
def load_player_icon(path):
    """
    Tải và thay đổi kích thước ảnh biểu tượng của người chơi.

    Args:
        path (str): Đường dẫn đến tệp ảnh biểu tượng của người chơi.

    Returns:
        pygame.Surface: Ảnh biểu tượng của người chơi đã tải và thay đổi kích thước.
    """
class Board:
    """
    Đại diện cho bàn cờ trò chơi.
    """
    def __init__(self):
        """
        Khởi tạo bàn cờ trò chơi.
        """
    def draw(self, screen):
        """
        Vẽ bàn cờ và các quân cờ trên màn hình.

        Args:
            screen (pygame.Surface): Màn hình trên đó vẽ bàn cờ và các quân cờ.
        """
    def place_piece(self, x, y, piece):
        """
        Đặt một quân cờ lên bàn cờ.

        Args:
            x (int): Tọa độ x của quân cờ.
            y (int): Tọa độ y của quân cờ.
            piece (str): Loại quân cờ ('X' hoặc 'O').

        Returns:
            bool: True nếu quân cờ được đặt thành công, False nếu ô đã bị chiếm.
        """
    def check_win(self, piece):
        """
        Kiểm tra nếu quân cờ được cho đã thắng trò chơi.

        Args:
            piece (str): Loại quân cờ cần kiểm tra thắng ('X' hoặc 'O').

        Returns:
            bool: True nếu quân cờ đã thắng, False nếu không.
        """
class Player:
    """
    Đại diện cho người chơi trong trò chơi.
    """
    def __init__(self, piece, icon):
        """
        Khởi tạo người chơi.

        Args:
            piece (str): Loại quân cờ mà người chơi sử dụng ('X' hoặc 'O').
            icon (pygame.Surface): Ảnh biểu tượng của người chơi.
        """
class Game:
    """
    Đại diện cho trò chơi chính.
    """
    def __init__(self):
        """
        Khởi tạo trò chơi.
        """
    def reset_game(self):
        """
        Đặt lại trò chơi về trạng thái ban đầu.
        """
    def switch_player(self):
        """
        Chuyển đổi người chơi hiện tại.
        """
    def run(self):
        """
        Chạy vòng lặp trò chơi chính.
        """
    def show_settings(self):
        """
        Hiển thị menu cài đặt.

        Returns:
            str: Kết quả của tương tác menu cài đặt ('continue' hoặc 'back_home').
        """
# Main loop
running = True
while running:
    """
    Vòng lặp chính của chương trình, xử lý các sự kiện và cập nhật màn hình.
    """
    mouse_pos = pygame.mouse.get_pos()
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            """
            Thoát chương trình khi nhận sự kiện QUIT.
            """
            pygame.quit()
            sys.exit()
        if event.type == pygame.MOUSEBUTTONDOWN:
            """
            Xử lý sự kiện khi nút chuột được nhấn.
            """
            if play_button.collidepoint(event.pos):
                """
                Chạy trò chơi khi nút Play được nhấn.
                """
                Game().run()
            if settings_button.collidepoint(event.pos):
                """
                Hiển thị menu cài đặt khi nút Settings được nhấn.
                """
                Game().show_settings()
            if quit_button.collidepoint(event.pos):
                """
                Thoát chương trình khi nút Quit được nhấn.
                """
                pygame.quit()
                sys.exit()

    screen.blit(frames[frame_index], (0, 0))
    frame_index = (frame_index + 1) % len(frames)

    draw_text_centered('Game Menu', font, BLACK, screen, pygame.Rect(280, 50, 200, 50))
    draw_button(play_button, 'Play', button_font_size, DARK_GRAY, screen, hover=play_button.collidepoint(mouse_pos))
    draw_button(settings_button, 'Settings', button_font_size, DARK_GRAY, screen, hover=settings_button.collidepoint(mouse_pos))
    draw_button(quit_button, 'Quit', button_font_size, DARK_GRAY, screen, hover=quit_button.collidepoint(mouse_pos))

    pygame.display.update()
    clock.tick(10)

